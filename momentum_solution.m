%% Part A - Data Processing and Preparation

% Clear workspace and close all figures
clear;
close all;

% Read and process 'return_monthly.xlsx'
% This file contains monthly stock returns in percentage terms
return_m_hor = readtable('return_monthly.xlsx', ...
    'ReadVariableNames', true, ...
    'PreserveVariableNames', true, ...
    'Format', 'auto');
num_vars1 = width(return_m_hor);
% Reshape data into long format
return_m_stacked = stack(return_m_hor, 3:num_vars1, ...
    'NewDataVariableName', 'return_m', ...
    'IndexVariableName', 'date');
% Convert and format dates
return_m_stacked.date = char(return_m_stacked.date);
return_m_stacked.datestr = datestr(return_m_stacked.date);
return_m_stacked.date = datetime(return_m_stacked.datestr, ...
    'InputFormat', 'dd-MMM-yyyy', ...
    'Locale', 'en_US');
% Convert returns to decimal format
return_m_stacked.return_m = return_m_stacked.return_m / 100;

% Read and process 'me_lag.xlsx'
% This file includes lagged market capitalization
market_cap_lm_hor = readtable('me_lag.xlsx', ...
    'ReadVariableNames', true, ...
    'PreserveVariableNames', true, ...
    'Format', 'auto');
num_vars2 = width(market_cap_lm_hor);
% Reshape data into long format
market_cap_lm_stacked = stack(market_cap_lm_hor, 3:num_vars2, ...
    'NewDataVariableName', 'lme', ...
    'IndexVariableName', 'date');
% Convert and format dates
market_cap_lm_stacked.date = char(market_cap_lm_stacked.date);
market_cap_lm_stacked.datestr = datestr(market_cap_lm_stacked.date);
market_cap_lm_stacked.date = datetime(market_cap_lm_stacked.datestr, ...
    'InputFormat', 'dd-MMM-yyyy', ...
    'Locale', 'en_US');

% Merge, sort, and clean the data
datatable = outerjoin(return_m_stacked, market_cap_lm_stacked, ...
    'Keys', {'date', 'code'}, ...
    'MergeKeys', true, ...
    'Type', 'left');
datatable = sortrows(datatable, {'code', 'date'}, ...
    {'ascend', 'ascend'});
% Remove rows with missing lagged market capitalization
datatable = datatable(~isnan(datatable.lme), :);
% Save the processed data
save('return_m.mat', 'datatable');